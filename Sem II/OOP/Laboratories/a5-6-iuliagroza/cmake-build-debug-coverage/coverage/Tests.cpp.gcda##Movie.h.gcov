        -:    0:Source:D:/Moveable-Personal/CS Work/College/Facultate/Sem II/OOP/Laboratories/a5-6-iuliagroza/domain/Movie.h
        -:    0:Graph:D:\Moveable-Personal\CS Work\College\Facultate\Sem II\OOP\Laboratories\a5-6-iuliagroza\cmake-build-debug-coverage\CMakeFiles\a5_6_iuliagroza.dir\tests\Tests.cpp.gcno
        -:    0:Data:D:\Moveable-Personal\CS Work\College\Facultate\Sem II\OOP\Laboratories\a5-6-iuliagroza\cmake-build-debug-coverage\CMakeFiles\a5_6_iuliagroza.dir\tests\Tests.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#ifndef A5_6_IULIAGROZA_MOVIE_H
        -:    2:#define A5_6_IULIAGROZA_MOVIE_H
        -:    3:
        -:    4:#include <string>
        -:    5:
        -:    6:using namespace std;
        -:    7:
        -:    8:class Movie {
        -:    9:public:
        -:   10:    Movie(string title, string genre, int year_of_release, int number_of_likes, string trailer);
        -:   11:
        -:   12:    Movie();
        -:   13:
        -:   14:private:
        -:   15:    string title;
        -:   16:    string genre;
        -:   17:    int year_of_release;
        -:   18:    int number_of_likes;
        -:   19:    string trailer;
        -:   20:
        -:   21:public:
        -:   22:    /*
        -:   23:     * GETTERS
        -:   24:     */
        -:   25:    string get_title() const;
        -:   26:
        -:   27:    string get_genre() const;
        -:   28:
        -:   29:    int get_year_of_release() const;
        -:   30:
        -:   31:    int get_number_of_likes() const;
        -:   32:
        -:   33:    string get_trailer() const;
        -:   34:
        -:   35:    /*
        -:   36:     * Function that returns the string representation of a Movie object.
        -:   37:     */
        -:   38:    string to_str();
        -:   39:
        -:   40:    /*
        -:   41:     * Custom operator that facilitates the assignment of a Movie object to another Movie object by reference.
        -:   42:     */
        -:   43:    Movie &operator=(const Movie &movie);
        -:   44:};
        -:   45:
        -:   46:/*
        -:   47: * Inline operator that facilitates the comparison between two Movie objects.
        -:   48: */
function _ZeqRK5MovieS1_ called 0 returned 0% blocks executed 0%
    #####:   49:inline bool operator==(const Movie &a, const Movie &b) {
    #####:   50:    return a.get_trailer() == b.get_trailer();
    %%%%%:   50-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   50-block  1
call    4 never executed
call    5 never executed
call    6 never executed
    %%%%%:   50-block  2
    $$$$$:   50-block  3
call    7 never executed
        -:   51:}
        -:   52:
        -:   53:#endif
